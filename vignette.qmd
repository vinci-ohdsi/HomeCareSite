---
title: "HomeCareSite Vignette"
author: "Bill O'Brien"
format: 
  html:
    toc: true
    embed-resources: true
editor: source
---

## Introduction

HomeCareSite is an R package for associating entries of a cohort table with a "home" care site. 

The initial implementation identifies the most recent care site prior to cohort entry, and other options will be offered, e.g. care site with plurality of visits. 

## Installation

```{r eval=FALSE}

remotes::install_github("vinci-ohdsi/HomeCareSite") 

```


## Example use

```{r output=FALSE}

library(HomeCareSite)
library(ggplot2) 
library(dplyr)
library(forcats)
library(Andromeda)
library(knitr)

connectionDetails <- DatabaseConnector::createConnectionDetails(
  dbms = "sql server",
  server = Sys.getenv("MY_DEV_SERVER"))


```

This function returns an S3 object with settings for database and table name information. The optional `careSiteColumn` parameter specifies which column in the `care_site` table is used (the example below is non-standard). 

```{r}

homeCareSiteSettings <- createHomeCareSiteSettings(
  connectionDetails, 
  cohortSchema = Sys.getenv("MY_COHORT_SCHEMA"),
  cohortTable = "dalbavancin",
  cdmSchema = Sys.getenv("MY_CDM_SCHEMA"),
  careSiteColumn = "x_institutionCode"
)

```

Derive the home care site for each cohort entry. This writes a new table to the cohort schema (with table name [cohort]_care_site) and returns a reference to the remote table. 

```{r message=FALSE, warning=FALSE}

result <- deriveHomeCareSite(homeCareSiteSettings)

```

S3 generic `summary` method returns data computed on server side

```{r message=FALSE, warning=FALSE}

summary(result)$freq |> 
  arrange(desc(N)) |>
  head() |>
  mutate(HOMECARESITE = paste0("site_", LETTERS[1:6])) |>
  kable() 

```

Download table from server to local Andromeda database

```{r message=FALSE, warning=FALSE}

andromeda <- Andromeda::andromeda()
andromeda$derivedCareSites <- downloadHomeCareSite(result)
names(andromeda$derivedCareSites) <- tolower(names(andromeda$derivedCareSites))

```

Use local data for analysis and reporting (of course this could also be done with `dplyr::tbl()` on the server side)

```{r warning=FALSE, message=FALSE}

andromeda$derivedCareSites |>
  count(homecaresite) |>
  mutate(homecaresite = as.character(row_number())) |> 
  filter(n >= 50) |> 
  ggplot(aes(x = n, 
             y = fct_reorder(homecaresite, n), 
             fill = homecaresite)) +
  geom_col() +
  theme(legend.position = 'none') +
  labs(x = 'Number of cohort entries', 
       y = 'Care site code (de-identified)',
       title = 'Home care site of cohort members',
       subtitle = 'Excludes sites with n < 50')

```

